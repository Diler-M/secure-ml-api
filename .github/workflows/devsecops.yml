name: DevSecOps Pipeline

permissions:
  actions: read
  contents: read
  security-events: write
  issues: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # -------------------- SAST --------------------
  codeql:
    name: Perform CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # -------------------- SCA / IaC --------------------
  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build the image locally so Trivy can scan it
      - name: Build Docker image for scan
        run: docker build -t secure-ml-api:latest .

      - name: Run Trivy on Docker image
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: 'secure-ml-api:latest'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true

      - name: Run Trivy on Terraform IaC
        uses: aquasecurity/trivy-action@0.12.0
        with:
          scan-type: 'fs'
          scan-ref: 'terraform-deployment'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true

  # -------------------- DAST (Informational) --------------------
  zap_scan:
    name: OWASP ZAP Baseline Scan (Reports Only)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create shared network & start API
        run: |
          docker network create zapnet
          docker build -t secure-ml-api .
          docker run -d --network zapnet --name api secure-ml-api
          echo "Waiting for API to start..."
          sleep 30

      # Run ZAP in same network and write reports into a writable host folder
      - name: Run OWASP ZAP Baseline Scan in same network
        continue-on-error: true
        run: |
          mkdir -p zap-reports
          docker run --network zapnet \
            -v "$PWD/zap-reports:/zap/wrk:rw" \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t http://api:8000/docs \
              -J zap-report.json \
              -w zap-report.md \
              -r zap-report.html \
              -a

      - name: List generated reports (debug)
        run: ls -lah zap-reports || true

      - name: Upload ZAP Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: zap-reports/*

  # -------------------- Build & Push --------------------
  docker_push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [codeql, trivy, zap_scan]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest

  # -------------------- Terraform Plan (manual apply later) --------------------
  terraform_plan:
    name: Terraform Plan (Review Only)
    runs-on: ubuntu-latest
    needs: docker_push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=terraform-deployment init

      - name: Terraform Plan
        run: terraform -chdir=terraform-deployment plan
