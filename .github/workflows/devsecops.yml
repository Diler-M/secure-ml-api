name: Secure ML API CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  codeql:
    name: CodeQL (SAST)
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  trivy:
    name: Trivy Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db

      - name: Docker login (optional)
        run: |
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            echo "Logged into Docker Hub."
          else
            echo "Docker Hub credentials not set, skipping login."
          fi

      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest

      - name: Run Trivy scan
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $HOME/.cache/trivy:/root/.cache/ \
            aquasec/trivy:latest image \
            --timeout 10m \
            --format table \
            --vuln-type os,library \
            --severity HIGH,CRITICAL \
            ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest | tee trivy-results.txt

          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $HOME/.cache/trivy:/root/.cache/ \
            aquasec/trivy:latest image \
            --timeout 10m \
            --format template \
            --template "@contrib/html.tpl" \
            --output trivy-results.html \
            ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: |
            trivy-results.txt
            trivy-results.html

  zap:
    name: OWASP ZAP DAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull & run API container
        run: |
          docker run -d --name api -p 8000:8000 ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest
          for i in {1..10}; do
            if curl -s http://localhost:8000 > /dev/null; then
              echo "API is up"
              break
            fi
            echo "Waiting for API..."
            sleep 3
          done

      - name: Run OWASP ZAP Baseline Scan
        run: |
          mkdir -p zap-reports
          docker run --rm --network=host \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:8000 -r zap-report.html || true

      - name: Upload ZAP reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-reports/zap-report.html

  terraform:
    name: Terraform Plan (Review Only)
    runs-on: ubuntu-latest
    needs: [codeql, trivy, zap] # Run last after scans
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_docker_image: "${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest"
      TF_VAR_allowed_cidr: ${{ secrets.ALLOWED_CIDR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan