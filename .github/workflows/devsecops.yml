name: CI Security & Deployment Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  DOCKER_IMAGE: dilerm13/secure-ml-api:latest

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: trivy-db

      - name: Run Trivy scan (TXT & HTML)
        run: |
          docker run --rm \
            -v ~/.cache/trivy:/root/.cache/ \
            aquasec/trivy:latest image \
            --timeout 10m \
            --scanners vuln,secret \
            --pkg-types os,library \
            --severity HIGH,CRITICAL \
            --format table $DOCKER_IMAGE > trivy-results.txt

          docker run --rm \
            -v ~/.cache/trivy:/root/.cache/ \
            aquasec/trivy:latest image \
            --timeout 10m \
            --scanners vuln,secret \
            --pkg-types os,library \
            --severity HIGH,CRITICAL \
            --format template \
            --template "@contrib/html.tpl" \
            $DOCKER_IMAGE > trivy-results.html

      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-results.txt
            trivy-results.html

  terraform-plan:
    name: Terraform Plan (Review Only)
    runs-on: ubuntu-latest
    env:
      TF_VAR_allowed_cidr: ${{ secrets.ALLOWED_CIDR }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan -out=tfplan

  zap-scan:
    name: OWASP ZAP DAST
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start API container
        run: |
          docker run -d --name api -p 8000:8000 $DOCKER_IMAGE
          for i in {1..15}; do
            if curl -s http://localhost:8000 > /dev/null; then
              echo "API is up"
              break
            fi
            echo "Waiting for API..."
            sleep 5
          done

      - name: Run OWASP ZAP Baseline Scan
        run: |
          mkdir -p zap-reports
          chmod 777 zap-reports
          docker run --rm --network=host \
            -v $(pwd)/zap-reports:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:8000 -r zap-report.html

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: zap-reports/*

      - name: Stop API container
        run: docker rm -f api || true
