name: DevSecOps Pipeline - SAST / SCA / DAST / Build & Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:${{ github.sha }}

jobs:
  # -------------------------
  # 1) CodeQL static analysis
  # -------------------------
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # -------------------------
  # 2) Build, DAST (ZAP), Trivy scans, push
  # -------------------------
  build_scan_and_push:
    name: Build, DAST (ZAP), Trivy (image + IaC) and Push Image
    runs-on: ubuntu-latest
    needs: codeql
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU (optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image (load into runner's Docker)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.IMAGE }}

      - name: Start container for DAST (background)
        run: |
          docker run -d --name secure-ml-ci -p 8000:8000 ${{ env.IMAGE }}
          # wait until the app responds (max ~60s)
          for i in {1..30}; do
            if curl -sS http://localhost:8000/ > /dev/null; then break; fi
            sleep 2
          done

      - name: OWASP ZAP baseline scan (DAST)
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:8000'

      
      - name: Trivy - Image Scan (SCA / vuln)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}
          scan-type: image
          format: json
          exit-code: '1'
          severity: CRITICAL,HIGH

      - name: Trivy - IaC Scan (Terraform)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: ./terraform-deployment
          format: table
          exit-code: '1'
          severity: CRITICAL,HIGH

      - name: Stop test container
        run: docker rm -f secure-ml-ci || true

      - name: Push image to Docker Hub (final)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
