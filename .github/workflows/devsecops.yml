name: DevSecOps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

env:
  AWS_REGION: eu-west-2

  # Checkov defaults
  CHECKOV_DIRECTORY: terraform-eks
  CHECKOV_OUTPUT_FORMAT: sarif

concurrency:
  group: devsecops-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checkov:
    name: Checkov (Terraform security scan)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ env.CHECKOV_DIRECTORY }}
          output_format: ${{ env.CHECKOV_OUTPUT_FORMAT }}
          quiet: true
          soft_fail: false            # fail the job on findings
          download_external_modules: true

      # upload SARIF into the Security tab
      - name: Upload Checkov SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  terraform-plan-eks:
    name: Terraform Plan (EKS) - review only
    runs-on: ubuntu-latest
    needs: checkov
    if: ${{ needs.checkov.result == 'success' }}

    # Required for GitHub OIDC to AWS (no long-lived keys)
    permissions:
      id-token: write     # OIDC
      contents: read
      pull-requests: write

    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      TF_VAR_aws_region: ${{ env.AWS_REGION }}  # feeds variable "aws_region" in TF

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (EKS)
        run: terraform -chdir=terraform-eks init -input=false -no-color

      - name: Terraform Validate (EKS)
        run: terraform -chdir=terraform-eks validate -no-color

      - name: Terraform Plan (EKS)
        run: terraform -chdir=terraform-eks plan -input=false -no-color -out=tfplan.out

      - name: Show Plan in Job Summary
        if: always()
        run: terraform -chdir=terraform-eks show -no-color tfplan.out >> "$GITHUB_STEP_SUMMARY"

      - name: Show Plan in Logs
        if: always()
        run: terraform -chdir=terraform-eks show -no-color tfplan.out
