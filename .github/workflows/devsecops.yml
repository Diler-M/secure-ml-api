name: DevSecOps Pipeline (EKS)

on:
  push:
    branches: ["main", "part-2"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    
permissions:
  contents: read
  id-token: write

jobs:
  codeql:
    name: CodeQL (SAST)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Analyze
        uses: github/codeql-action/analyze@v3

  trivy:
    name: Trivy (Image + EKS IaC)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image for scan
        run: docker build -t secure-ml-api:latest .

      - name: Trivy (Image) - fail on HIGH/CRITICAL
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: secure-ml-api:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: HIGH,CRITICAL

      - name: Trivy (Terraform IaC for EKS) - fail on HIGH/CRITICAL
        uses: aquasecurity/trivy-action@0.12.0
        with:
          scan-type: fs
          scan-ref: terraform-eks
          format: table
          exit-code: 1
          ignore-unfixed: true

  checkov:
    name: Checkov (EKS Terraform policy)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkov scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform-eks
          soft_fail: false

  sbom:
    name: SBOM (Syft)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image for SBOM
        run: docker build -t secure-ml-api:latest .

      - name: Generate SBOM (SPDX JSON)
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            anchore/syft:latest scan docker:secure-ml-api:latest -o spdx-json > sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

  terraform-plan:
    name: Terraform Plan (EKS) â€” review only
    runs-on: ubuntu-latest
    needs: [trivy, checkov, sbom]
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: write
    env:
      AWS_REGION: eu-west-2
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      TF_VAR_aws: '{"region":"eu-west-2"}'
      TF_VAR_cluster_name: "secure-ml-eks"
      TF_VAR_vpc_cidr: "10.0.0.0/16"
      TF_VAR_tags: '{"Project":"secure-ml-api","Env":"dev"}'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC, read-only)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::535537926556:role/GitHubActions-secure-ml-ro
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false

      - name: Terraform fmt (auto-fix)
        working-directory: terraform-eks
        run: terraform fmt -recursive -diff

      - name: Terraform Init (EKS)
        working-directory: terraform-eks
        env:
          TF_INPUT: "false"
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: terraform-eks
        run: terraform validate

      - name: Terraform Plan (EKS)
        working-directory: terraform-eks
        env:
          TF_INPUT: "false"
        run: terraform plan -input=false -out=tfplan.out