name: Secure ML API CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  pull-requests: read

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v2
        with:
          languages: python
      - uses: github/codeql-action/analyze@v2

  dependency-review:
    name: Dependency Review (PR Gate)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v3

  terraform-plan:
    name: Terraform Plan (Review Only)
    runs-on: ubuntu-latest
    needs: [codeql]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_allowed_cidr: ${{ secrets.ALLOWED_CIDR }}
        run: terraform plan -out=tfplan

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    needs: [codeql]
    steps:
      - uses: actions/checkout@v4

      # Cache the Trivy vulnerability database
      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.0_Linux-64bit.deb

      - name: Run Trivy scan on docker image
        run: |
          trivy image \
            --format table \
            --output trivy-results.txt \
            --vuln-type os,library \
            --severity HIGH,CRITICAL \
            --timeout 10m \
            ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api:latest

      - name: Upload Trivy Scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-results.txt

  zap-scan:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    steps:
      - uses: actions/checkout@v4
      - name: Run OWASP ZAP Baseline Scan
        run: |
          mkdir -p zap-reports
          docker run --rm -v $(pwd)/zap-reports:/zap/wrk:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://example.com \
            -r zap-report.html \
            -J zap-report.json \
            -w zap-report.md \
            || true
      - name: Upload ZAP reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-reports
          path: zap-reports/*
