name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  id-token: write
  pull-requests: write

jobs:
  codeql-analysis:
    name: Perform CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Trivy scan on Docker image
        uses: aquasecurity/trivy-action@0.14.0
        with:
          image-ref: "dilerm13/secure-ml-api:latest"
          format: 'table'
          severity: 'HIGH,CRITICAL'

  zap-scan:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create zap-reports directory
        run: mkdir -p zap-reports
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --network host \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:8000/docs \
            -J zap-reports/report.json \
            -w zap-reports/report.md \
            -r zap-reports/report.html || true
      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-results
          path: zap-reports/*

  terraform:
    name: Terraform Plan (manual apply)
    runs-on: ubuntu-latest
    needs: [codeql-analysis, trivy-scan, zap-scan]
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          aws-region: us-east-1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan (with secure CIDR)
        run: terraform plan -var="allowed_cidr=${{ secrets.ALLOWED_CIDR }}"
