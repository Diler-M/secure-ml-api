name: Secure ML API CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  codeql-analysis:
    name: Perform CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  dependency-review:
    name: Dependency Review (PR gate)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Cache the Trivy vulnerability database
      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db

      - name: Run Trivy scan on docker image
        run: |
          trivy image \
            --format table \
            --output trivy-results.txt \
            --vuln-type os,library \
            --severity HIGH,CRITICAL \
            --timeout 10m \
            dilerm13/secure-ml-api:latest

      - name: Upload Trivy Scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-results.txt

  zap-scan:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create report directory
        run: mkdir -p zap-reports

      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --network="host" \
            -v $(pwd)/zap-reports:/zap/wrk:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t http://localhost:8000 \
              -I \
              -r zap-report.html || true

      - name: Upload ZAP Scan results
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report
          path: zap-reports/*

  terraform-plan:
    name: Terraform Plan (review only)
    runs-on: ubuntu-latest
    needs: [trivy-scan, codeql-analysis]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan
