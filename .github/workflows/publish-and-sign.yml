name: Publish & Sign (Cosign keyless)

on:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "requirements.txt"
      - "**/*.py"
      - ".github/workflows/publish-and-sign.yml"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  IMAGE_NAME: dilerm/secure-ml-api
  IMAGE_TAG: latest

jobs:
  build-push-sign:
    name: Build → Push → SBOM → Sign (keyless)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false             
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_id }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      # Generate SBOM (SPDX JSON) for the pushed image
      - name: Generate SBOM (SPDX)
        run: |
          docker pull $IMAGE_NAME:$IMAGE_TAG
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            anchore/syft:latest packages docker:$IMAGE_NAME:$IMAGE_TAG -o spdx-json > sbom.spdx.json

      # Attach SBOM to the image as an OCI artifact
      - name: Attach SBOM to Image (OCI referrers)
        run: |
          cosign attach sbom --sbom sbom.spdx.json $IMAGE_NAME:$IMAGE_TAG

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-image-${{ github.sha }}
          path: sbom.spdx.json

      # Sign the image with keyless (uses GitHub OIDC → Fulcio; logs to Rekor)
      - name: Cosign sign (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
          CERT_IDENTITY_REGEX: "https://github.com/${{ github.repository }}(/|$)"
          CERT_ISSUER: "https://token.actions.githubusercontent.com"
        run: |
          cosign sign \
            --yes \
            --tlog-upload=true \
            --rekor-url https://rekor.sigstore.dev \
            --cert-identity-regexp "${CERT_IDENTITY_REGEX}" \
            --cert-oidc-issuer "${CERT_ISSUER}" \
            $IMAGE_NAME:$IMAGE_TAG

      # Create a simple attestation that references the SBOM (type=spdx)
      - name: Cosign attest (SBOM reference)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign attest \
            --yes \
            --predicate sbom.spdx.json \
            --type spdx \
            $IMAGE_NAME:$IMAGE_TAG

      - name: Done
        run: |
          echo "Pushed, signed, and attested: $IMAGE_NAME:$IMAGE_TAG"
          echo "Transparency log entry available on Rekor (keyless)."