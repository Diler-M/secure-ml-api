name: Publish & Sign Container

on:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "requirements.txt"
      - "**/*.py"
      - ".github/workflows/publish-and-sign.yml"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: read

env:
  IMAGE_NAME: secure-ml-api
  IMAGE_TAG: latest
  IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/secure-ml-api
  COSIGN_EXPERIMENTAL: "1"

jobs:
  build-push-sign:
    name: Build → Push → SBOM → Sign (keyless)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Pre-checks for secrets and username format
      - name: Pre-check Docker Hub secrets & username format
        shell: bash
        run: |
          set -euo pipefail

          # Ensure secrets are present
          if [[ -z "${{ secrets.DOCKERHUB_USERNAME || '' }}" ]]; then
            echo "::error::Missing required secret DOCKERHUB_USERNAME"
            exit 1
          fi
          if [[ -z "${{ secrets.DOCKERHUB_TOKEN || '' }}" ]]; then
            echo "::error::Missing required secret DOCKERHUB_TOKEN"
            exit 1
          fi

          # Ensure username is lowercase (Docker tags require lowercase namespace)
          USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
          if [[ "$USERNAME" != "${USERNAME,,}" ]]; then
            echo "::error::DOCKERHUB_USERNAME must be lowercase. Current: '$USERNAME' → try: '${USERNAME,,}'"
            exit 1
          fi

          # Ensure IMAGE_REPO uses the lowercase username
          EXPECTED_REPO="${USERNAME,,}/secure-ml-api"
          if [[ "${{ env.IMAGE_REPO }}" != "$EXPECTED_REPO" ]]; then
            echo "::warning::Adjusting IMAGE_REPO to '$EXPECTED_REPO'"
            echo "IMAGE_REPO=$EXPECTED_REPO" >> "$GITHUB_ENV"
          fi

      # Login to Docker Hub (fail-fast if creds wrong)
      - name: Login to Docker Hub
        id: dlogin
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Verify Docker Hub login succeeded
        if: ${{ steps.dlogin.outcome != 'success' }}
        run: |
          echo "::error::Docker Hub login failed. Check DOCKERHUB_USERNAME/DOCKERHUB_TOKEN secrets and token permissions."
          exit 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
          provenance: false
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Generate SBOM (Syft SPDX JSON)
        run: |
          docker pull "${IMAGE_REPO}:${IMAGE_TAG}"
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            anchore/syft:latest "docker:${IMAGE_REPO}:${IMAGE_TAG}" -o spdx-json > sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

      - name: Install Cosign
        run: |
          set -euo pipefail
          COSIGN_VERSION="$(curl -s https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d '"' -f4)"
          curl -sL "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64" -o cosign
          chmod +x cosign && sudo mv cosign /usr/local/bin/

      # Keyless sign using GitHub OIDC
      - name: Cosign sign (keyless)
        env:
          IMAGE: ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
        run: |
          set -euo pipefail
          echo "Signing ${IMAGE}"
          cosign sign --yes "${IMAGE}"

      - name: Summary
        run: |
          echo "Pushed and signed image: ${IMAGE_REPO}:${IMAGE_TAG}"